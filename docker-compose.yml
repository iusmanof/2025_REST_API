services:
  rest_api:
    image: iusmanof/golang_restapi:v1.0
    container_name: rest_api
    working_dir: /app
    build: .
    ports:
      - "${API_IN_PORT}:${API_OUT_PORT}"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_SSLMODE=${POSTGRES_SSLMODE}
    depends_on:
      pg_container:
        condition: service_healthy
    networks:
      - network_api
    volumes:
      - .:/app  # Привязка текущей папки с кодом внутрь контейнера
    command: ["go", "run", "main.go"]
  pg_container:
    container_name: pg_container
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB} 
    ports:
      - ${POSTGRES_IN_PORT}:${POSTGRES_OUT_PORT}  
    volumes:
      - pgdata:/var/lib/postgres/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d shop_db"]
      interval: 10s
      retries: 3
      start_period: 30s
      timeout: 10s
    networks:
      - network_api

volumes:
  pgdata: {}

networks:
  network_api:
    driver: bridge